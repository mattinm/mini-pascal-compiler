[program name:fibonacci]
	[const]
		[id name:question]
		[id name:msginline]
		[id name:msgfunction]
		[id name:msgrecursive]
	[var]
		[id name:n]
		[id name:cur]
		[id name:temp]
		[id name:f1]
		[id name:f2]
	[procedure name:recursivefibonacci]
		[param]
			[id name:n]
			[id name:f1]
			[id name:f2]
		[statement]
			[if]
				[expr]
					[simexpr]
						[term]
							[factor]
								[id name:n]
					[rel]
					[simexpr]
						[term]
							[factor]
								[val]
				[statement]
					[write]
						[expr]
							[simexpr]
								[term]
									[factor]
										[val val:Y]
					[if]
						[expr]
							[simexpr]
								[term]
									[factor]
										[id name:f1]
							[rel]
							[simexpr]
								[term]
									[factor]
										[val]
						[statement]
							[write]
								[expr]
									[simexpr]
										[term]
											[factor]
												[val val:Y]
							[proccall name:recursivefibonacci]
								[expr]
									[simexpr]
										[term]
											[factor]
												[id name:n]
										[add]
										[term]
											[factor]
												[val val:Y]
								[expr]
									[simexpr]
										[term]
											[factor]
												[val val:Y]
								[expr]
									[simexpr]
										[term]
											[factor]
												[val]
						[statement]
							[if]
								[expr]
									[simexpr]
										[term]
											[factor]
												[id name:f2]
									[rel]
									[simexpr]
										[term]
											[factor]
												[val]
								[statement]
									[write]
										[expr]
											[simexpr]
												[term]
													[factor]
														[val val:Y]
									[proccall name:recursivefibonacci]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:n]
												[add]
												[term]
													[factor]
														[val val:Y]
										[expr]
											[simexpr]
												[term]
													[factor]
														[val val:Y]
										[expr]
											[simexpr]
												[term]
													[factor]
														[val val:Y]
								[statement]
									[write]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:f1]
												[add]
												[term]
													[factor]
														[id name:f2]
									[proccall name:recursivefibonacci]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:n]
												[add]
												[term]
													[factor]
														[val val:Y]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:f2]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:f1]
												[add]
												[term]
													[factor]
														[id name:f2]
	[function name:nextfibonacci]
		[param]
			[id name:f1]
			[id name:f2]
		[statement]
			[if]
				[expr]
					[simexpr]
						[term]
							[factor]
								[id name:f1]
					[rel]
					[simexpr]
						[term]
							[factor]
								[val]
				[statement]
					[assign name:nextfibonacci]
						[id name:nextfibonacci]
						[expr]
							[simexpr]
								[term]
									[factor]
										[val val:Y]
				[statement]
					[if]
						[expr]
							[simexpr]
								[term]
									[factor]
										[id name:f2]
							[rel]
							[simexpr]
								[term]
									[factor]
										[val]
						[statement]
							[assign name:nextfibonacci]
								[id name:nextfibonacci]
								[expr]
									[simexpr]
										[term]
											[factor]
												[val val:Y]
						[statement]
							[assign name:nextfibonacci]
								[id name:nextfibonacci]
								[expr]
									[simexpr]
										[term]
											[factor]
												[id name:f1]
										[add]
										[term]
											[factor]
												[id name:f2]
	[statement]
		[write]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:question]
		[read]
			[id name:n]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:msginline]
		[assign name:cur]
			[id name:cur]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val]
		[while]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:cur]
				[rel]
				[simexpr]
					[term]
						[factor]
							[id name:n]
			[statement]
				[if]
					[expr]
						[simexpr]
							[term]
								[factor]
									[id name:cur]
						[rel]
						[simexpr]
							[term]
								[factor]
									[val val:Y]
					[statement]
						[write]
							[expr]
								[simexpr]
									[term]
										[factor]
											[val val:Y]
						[write]
							[expr]
								[simexpr]
									[term]
										[factor]
											[val val:Y]
						[assign name:f1]
							[id name:f1]
							[expr]
								[simexpr]
									[term]
										[factor]
											[val val:Y]
						[assign name:f2]
							[id name:f2]
							[expr]
								[simexpr]
									[term]
										[factor]
											[val val:Y]
					[statement]
						[assign name:temp]
							[id name:temp]
							[expr]
								[simexpr]
									[term]
										[factor]
											[id name:f2]
						[assign name:f2]
							[id name:f2]
							[expr]
								[simexpr]
									[term]
										[factor]
											[id name:f1]
									[add]
									[term]
										[factor]
											[id name:f2]
						[assign name:f1]
							[id name:f1]
							[expr]
								[simexpr]
									[term]
										[factor]
											[id name:temp]
						[write]
							[expr]
								[simexpr]
									[term]
										[factor]
											[val val:Y]
						[write]
							[expr]
								[simexpr]
									[term]
										[factor]
											[id name:f2]
				[assign name:cur]
					[id name:cur]
					[expr]
						[simexpr]
							[term]
								[factor]
									[id name:cur]
							[add]
							[term]
								[factor]
									[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:msgfunction]
		[assign name:cur]
			[id name:cur]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val]
		[assign name:f1]
			[id name:f1]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val]
		[assign name:f2]
			[id name:f2]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val]
		[while]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:cur]
				[rel]
				[simexpr]
					[term]
						[factor]
							[id name:n]
			[statement]
				[assign name:temp]
					[id name:temp]
					[expr]
						[simexpr]
							[term]
								[factor]
									[funccall name:nextfibonacci]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:f1]
										[expr]
											[simexpr]
												[term]
													[factor]
														[id name:f2]
				[write]
					[expr]
						[simexpr]
							[term]
								[factor]
									[val val:Y]
				[write]
					[expr]
						[simexpr]
							[term]
								[factor]
									[id name:temp]
				[assign name:f1]
					[id name:f1]
					[expr]
						[simexpr]
							[term]
								[factor]
									[id name:f2]
				[assign name:f2]
					[id name:f2]
					[expr]
						[simexpr]
							[term]
								[factor]
									[id name:temp]
				[assign name:cur]
					[id name:cur]
					[expr]
						[simexpr]
							[term]
								[factor]
									[id name:cur]
							[add]
							[term]
								[factor]
									[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val val:Y]
		[writeln]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:msgrecursive]
		[proccall name:recursivefibonacci]
			[expr]
				[simexpr]
					[term]
						[factor]
							[id name:n]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val]
			[expr]
				[simexpr]
					[term]
						[factor]
							[val]
